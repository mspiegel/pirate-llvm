name: CI

on:
  push:
  release:
    type: [created]

jobs:
  build_image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        name: [ubuntu, centos7]
        include:
          - name: ubuntu
            build-image-name: pirateteam/build-ubuntu-x86_64
            build-image-dir:  images/build-ubuntu
            llvm-image-name:  pirateteam/llvm-ubuntu-x86_64
            llvm-image-dir:   images/llvm-ubuntu
          - name: centos7
            build-image-name: pirateteam/build-centos7-x86_64
            build-image-dir:  images/build-centos7
            llvm-image-name:  pirateteam/llvm-centos7-x86_64
            llvm-image-dir:   images/llvm-centos7
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Make pirateteam/build docker image
        run: |
          docker build -t ${{matrix.build-image-name}} ${{matrix.build-image-dir}}
          docker save ${{matrix.build-image-name}} | gzip > latest.tar.gz
      - name: Save build image artifact
        uses: actions/upload-artifact@v1
        with:
          name: pirateteam_build_${{matrix.name}}
          path: latest.tar.gz
      - name: Post build docker image
        run: |
          echo ${{ secrets.docker_password }} | docker login -u gapspirateteam --password-stdin
          docker push ${{matrix.build-image-name}}:${{github.event.release.tag_name}}
        if: github.event_name == 'release'
      - name: Cache
        uses: actions/cache@v1
        with:
          path: cache
          key: build-${{matrix.name}}-${{github.sha}}
          # fall back to (latest) previous cache
          restore-keys: build-${{matrix.name}}
      - name: Run cmake
        run: |
          mkdir -p build
          mkdir -p cache
          docker run -i \
            --cpus=2 \
            --memory=16G \
            --mount type=bind,src=`pwd`/build,dst=/root/build  \
            --mount type=bind,src=`pwd`/cache,dst=/root/cache \
            --mount type=bind,src=`pwd`/${{matrix.llvm-image-dir}},dst=/root/dist \
            --mount type=bind,src=`pwd`,dst=/root/pirate-llvm,ro \
            -w /root/build \
            ${{matrix.build-image-name}} \
            /root/pirate-llvm/scripts/docker-cmake.sh Release
      - name: Run build
        run: |
          docker run -i \
            --cpus=2 \
            --memory=16G \
            --mount type=bind,src=`pwd`/build,dst=/root/build  \
            --mount type=bind,src=`pwd`/cache,dst=/root/cache \
            --mount type=bind,src=`pwd`/${{matrix.llvm-image-dir}},dst=/root/dist \
            --mount type=bind,src=`pwd`,dst=/root/pirate-llvm,ro \
            -w /root/build \
            -e CCACHE_DIR=/root/cache/ccache \
            -e CCACHE_COMPRESS=true \
            -e CCACHE_MAXSIZE=400M \
            ${{matrix.build-image-name}} \
            make -j 2 \
                install-clang \
                install-clang-libraries \
                install-clang-resource-headers \
                install-lld \
                install-lldb \
                install-liblldb \
                install-llvm-readelf
          cd ${{matrix.llvm-image-dir}}
          tar cfz $GITHUB_WORKSPACE/pirate-llvm-${{matrix.name}}.tgz pirate-llvm
      - name: Save LLVM dist
        uses: actions/upload-artifact@v1
        with:
          name: pirate-llvm-${{matrix.name}}
          path: pirate-llvm-${{matrix.name}}.tgz
      - name: Make pirateteam/llvm docker image
        run: docker build -t ${{matrix.llvm-image-name}} ${{matrix.llvm-image-dir}}
      - name: Post docker images
        run: |
          echo ${{ secrets.docker_password }} | docker login -u gapspirateteam --password-stdin
          docker push ${{matrix.llvm-image-name}}:${{github.event.release.tag_name}}
        if: github.event_name == 'release'